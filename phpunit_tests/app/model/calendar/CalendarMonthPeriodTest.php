<?php

namespace Screwfix;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2013-07-05 at 09:34:23.
 */
class CalendarMonthPeriodTest extends \UnitTestCase {

	/**
	 * @var CalendarMonthPeriod
	 */
	protected $object;
	protected $resultOneMonth = array (
		2013 =>
		array(
			7 =>
			array(
				0 => '2013-07-01',
				1 => '2013-07-02',
				2 => '2013-07-03',
				3 => '2013-07-04',
				4 => '2013-07-05',
				5 => '2013-07-06',
				6 => '2013-07-07',
				7 => '2013-07-08',
				8 => '2013-07-09',
				9 => '2013-07-10',
				10 => '2013-07-11',
				11 => '2013-07-12',
				12 => '2013-07-13',
				13 => '2013-07-14',
				14 => '2013-07-15',
				15 => '2013-07-16',
				16 => '2013-07-17',
				17 => '2013-07-18',
				18 => '2013-07-19',
				19 => '2013-07-20',
				20 => '2013-07-21',
				21 => '2013-07-22',
				22 => '2013-07-23',
				23 => '2013-07-24',
				24 => '2013-07-25',
				25 => '2013-07-26',
				26 => '2013-07-27',
				27 => '2013-07-28',
				28 => '2013-07-29',
				29 => '2013-07-30',
				30 => '2013-07-31',
				31 => '2013-08-01',
				32 => '2013-08-02',
				33 => '2013-08-03',
				34 => '2013-08-04',
			),
		),
	);
	protected $result3Months = array(
		2013 =>
		array(
			7 =>
			array(
				0 => '2013-07-01',
				1 => '2013-07-02',
				2 => '2013-07-03',
				3 => '2013-07-04',
				4 => '2013-07-05',
				5 => '2013-07-06',
				6 => '2013-07-07',
				7 => '2013-07-08',
				8 => '2013-07-09',
				9 => '2013-07-10',
				10 => '2013-07-11',
				11 => '2013-07-12',
				12 => '2013-07-13',
				13 => '2013-07-14',
				14 => '2013-07-15',
				15 => '2013-07-16',
				16 => '2013-07-17',
				17 => '2013-07-18',
				18 => '2013-07-19',
				19 => '2013-07-20',
				20 => '2013-07-21',
				21 => '2013-07-22',
				22 => '2013-07-23',
				23 => '2013-07-24',
				24 => '2013-07-25',
				25 => '2013-07-26',
				26 => '2013-07-27',
				27 => '2013-07-28',
				28 => '2013-07-29',
				29 => '2013-07-30',
				30 => '2013-07-31',
				31 => '2013-08-01',
				32 => '2013-08-02',
				33 => '2013-08-03',
				34 => '2013-08-04',
			),
			8 =>
			array(
				0 => '2013-07-29',
				1 => '2013-07-30',
				2 => '2013-07-31',
				3 => '2013-08-01',
				4 => '2013-08-02',
				5 => '2013-08-03',
				6 => '2013-08-04',
				7 => '2013-08-05',
				8 => '2013-08-06',
				9 => '2013-08-07',
				10 => '2013-08-08',
				11 => '2013-08-09',
				12 => '2013-08-10',
				13 => '2013-08-11',
				14 => '2013-08-12',
				15 => '2013-08-13',
				16 => '2013-08-14',
				17 => '2013-08-15',
				18 => '2013-08-16',
				19 => '2013-08-17',
				20 => '2013-08-18',
				21 => '2013-08-19',
				22 => '2013-08-20',
				23 => '2013-08-21',
				24 => '2013-08-22',
				25 => '2013-08-23',
				26 => '2013-08-24',
				27 => '2013-08-25',
				28 => '2013-08-26',
				29 => '2013-08-27',
				30 => '2013-08-28',
				31 => '2013-08-29',
				32 => '2013-08-30',
				33 => '2013-08-31',
				34 => '2013-09-01',
			),
			9 =>
			array(
				0 => '2013-08-26',
				1 => '2013-08-27',
				2 => '2013-08-28',
				3 => '2013-08-29',
				4 => '2013-08-30',
				5 => '2013-08-31',
				6 => '2013-09-01',
				7 => '2013-09-02',
				8 => '2013-09-03',
				9 => '2013-09-04',
				10 => '2013-09-05',
				11 => '2013-09-06',
				12 => '2013-09-07',
				13 => '2013-09-08',
				14 => '2013-09-09',
				15 => '2013-09-10',
				16 => '2013-09-11',
				17 => '2013-09-12',
				18 => '2013-09-13',
				19 => '2013-09-14',
				20 => '2013-09-15',
				21 => '2013-09-16',
				22 => '2013-09-17',
				23 => '2013-09-18',
				24 => '2013-09-19',
				25 => '2013-09-20',
				26 => '2013-09-21',
				27 => '2013-09-22',
				28 => '2013-09-23',
				29 => '2013-09-24',
				30 => '2013-09-25',
				31 => '2013-09-26',
				32 => '2013-09-27',
				33 => '2013-09-28',
				34 => '2013-09-29',
				35 => '2013-09-30',
				36 => '2013-10-01',
				37 => '2013-10-02',
				38 => '2013-10-03',
				39 => '2013-10-04',
				40 => '2013-10-05',
				41 => '2013-10-06',
			),
		),
	);
	protected $timestamp;
	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */
	protected function setUp()
	{
		$dateTime = new \DateTime('2013/07/15');
		$this->timestamp = $dateTime->getTimestamp();
	}

	public function testGetOneMonth()
	{
		$iterator = new CalendarMonthPeriod('2013/07/31', 1);

		$this->assertSame($this->resultOneMonth, $iterator->getArray());
	}

	public function testGet3Months()
	{
		// with date format
		$iterator = new CalendarMonthPeriod('2013/07/01', 3);

		$this->assertSame($this->result3Months, $iterator->getArray());
	}

	public function testSetUsingDateFormat()
	{
		$iterator = new CalendarMonthPeriod();

		$iterator->set('2013/07/01', 3);

		$this->assertSame($this->result3Months, $iterator->getArray());
	}
	
	public function testCurrent()
	{
		$iterator = new CalendarMonthPeriod('2013/07/01');
		
		$iterator->rewind();
		
		$this->assertSame($this->resultOneMonth[2013][7][0], $iterator->current());
		
		$iterator->next();
		
		$this->assertSame($this->resultOneMonth[2013][7][1], $iterator->current());
	}

}
