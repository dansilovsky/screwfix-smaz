<?php

namespace Screwfix;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2013-06-29 at 15:02:12.
 */
class ShiftPatternFilterTest extends \UnitTestCase {

	/**
	 * @covers Screwfix\ShiftPatternFilter::day
	 */
	public function testDay()
	{
		$date = date_create('1970/01/27'); // tuesday, 3rd week from beginnig, 2nd week in shift pattern
		$timestamp = $date->getTimestamp();
		$patternArray = array(//weeks
			0 => array(//days
				0 => array('00:00', '15:00'),
				1 => array('01:00', '15:00'),
				2 => array('02:00', '15:00'),
				3 => array('03:00', '15:00'),
				4 => array('04:00', '15:00'),
				5 => NULL,
				6 => array('06:00', '15:00'),
			),
			1 => array(//days
				0 => array('12:00', '20:00'),
				1 => array('12:00', '20:00'),
				2 => array('12:00', '20:00'),
				3 => array('12:00', '20:00'),
				4 => NULL,
				5 => NULL,
				6 => NULL,
			),
			2 => array(//days
				0 => array('15:00', '23:00'),
				1 => array('15:00', '23:00'),
				2 => array('15:00', '23:00'),
				3 => array('15:00', '23:00'),
				4 => array('15:00', '23:00'),
				5 => NULL,
				6 => NULL,
			),
		);

		$shiftPatternDateMock = $this->getMock('\Screwfix\ShiftPatternDate');

		$shiftPatternDateMock->expects($this->once())
			->method('set');

		$shiftPatternDateMock->expects($this->once())
			->method('week')
			->with(3)
			->will($this->returnValue(0));

		$shiftPatternDateMock->expects($this->once())
			->method('day')
			->will($this->returnValue(1));

		$shiftPattern = new ShiftPatternFilter($shiftPatternDateMock);
		$shiftPattern->setPattern($patternArray);

		$this->assertSame(array('01:00', '15:00'), $shiftPattern->day($timestamp));
	}

	/**
	 * @covers Screwfix\ShiftPatternFilter::day
	 * @expectedException Screwfix\ShiftPatternFilter_ArrayNotSet_Exception
	 */
	public function testDayShiftPatternArrayNotSetException()
	{
		$shiftPatternDateMock = $this->getMock('\Screwfix\ShiftPatternDate');

		$shiftPattern = new ShiftPatternFilter($shiftPatternDateMock);

		$shiftPattern->day(0);
	}

}
